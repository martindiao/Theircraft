syntax = "proto2";

enum CSBlockType
{
	None = 0;
	Dirt = 1;
	GrassBlock = 2;
	Tnt = 3;
	Brick = 4;
	Furnace = 5;
	HayBlock = 6;
	JungleLeaves = 7;
	Grass = 8;
	Stone = 9;
	BedRock = 10;
	Poppy = 11;
	Dandelion = 12;
	OakLog = 13;
	OakLeaves = 14;
	BrickStairs = 15;
	Torch = 16;
	BrickWall = 17;
	OakPlanks = 18;
	DoubleStoneSlab = 19;
	Cobweb = 20;
	RedSand = 21;
	OakSapling = 22;
	CoalOre = 23;
	IronOre = 24;
	GoldOre = 25;
	DiamondOre = 26;
	EmeraldOre = 27;
	RedstoneOre = 28;
	CoalBlock = 29;
	IronBlock = 30;
	GoldBlock = 31;
	DiamondBlock = 32;
	EmeraldBlock = 33;
	RedstoneBlock = 34;
	Sand = 35;
	Gravel = 36;
	OakWoodStairs = 37;
	CobblestoneStairs = 38;
	StoneBrickStairs = 39;
	NetherBrickStairs = 40;
	SandstoneStairs = 41;
	SpruceWoodStairs = 42;
	BirchWoodStairs = 43;
	JungleWoodStairs = 44;
	QuartzStairs = 45;
	SpruceWoodPlanks = 46;
	BirchWoodPlanks = 47;
	JungleWoodPlanks = 48;
	AcaciaWoodPlanks = 49;
	DarkOakWoodPlanks = 50;
	Cobblestone = 51;
	StoneBricks = 52;
	CobblestoneWall = 53;
	Bookshelf = 54;
	MossyCobblestoneWall = 55;
	MossyCobblestone = 56;
	MossyCobblestoneStairs = 57;
	MossyStoneBricks = 58;
	MossyStoneBrickStairs = 59;
	MossyStoneBrickWall = 60;
	OakSlab = 61;
	SpruceSlab = 62;
	BirchSlab = 63;
	JungleSlab = 64;
	AcaciaSlab = 65;
	DarkOakSlab = 66;
	StoneSlab = 67;
	SmoothStoneSlab = 68;
	CobblestoneSlab = 69;
	MossyCobblestoneSlab = 70;
	StoneBrickSlab = 71;
	MossyStoneBrickSlab = 72;
	BrickSlab = 73;
	NetherBrickSlab = 74;
	QuartzSlab = 75;
	Glass = 76;
	GlassPane = 77;
	SpruceLeaves = 78;
	BirchLeaves = 79;
	AcaciaLeaves = 80;
	DarkOakLeaves = 81;
	BirchLog = 82;
	SpruceLog = 83;
	JungleLog = 84;
	AcaciaLog = 85;
	DarkOakLog = 86;
	SpruceSapling = 87;
	BirchSapling = 88;
	JungleSapling = 89;
	AcaciaSapling = 90;
	DarkOakSapling = 91;
	Ice = 92;
	PackedIce = 93;
	Chest = 94;
	VerticalBrickSlab = 95;
	DeadBush = 96;
	Cactus = 97;
}

enum CSBlockOrientation
{
	Default = 0;
	PositiveY_PositiveZ = 1;
	PositiveY_PositiveX = 2;
	PositiveY_NegativeZ = 3;
	PositiveY_NegativeX = 4;
	NegativeY_PositiveZ = 5;
	NegativeY_PositiveX = 6;
	NegativeY_NegativeZ = 7;
	NegativeY_NegativeX = 8;
	X = 9;
	Y = 10;
	Z = 11;
}

message CSBlockAttrs
{
	required CSVector3Int pos = 1;
	optional CSBlockOrientation orient = 2;
	optional CSVector3Int depentPos = 3;
}

message CSVector2Int
{
	required int32 x = 1;
	required int32 y = 2;
}

message CSVector3
{
	required float x = 1;
	required float y = 2;
	required float z = 3;
}
message CSVector3Int
{
	required int32 x = 1;
	required int32 y = 2;
	required int32 z = 3;
}

message CSBlock
{
	required CSVector3Int position = 1;
	required CSBlockType type = 2;
	optional CSBlockOrientation orient = 3;
	optional CSVector3Int depentPos = 4;
}

message CSItem
{
	required CSBlockType Type = 1;
	required uint32 Count = 2;
}

message CSPlayer
{
	optional uint32 PlayerID = 1;
	optional string Name = 2;
	optional CSVector3 Position = 3;
	optional CSVector3 Rotation = 4;
	optional uint32 SelectIndex = 5;
	repeated CSItem SelectItems = 6;
	repeated CSItem BagItems = 7;
}

message CSChunk
{
	required CSVector2Int Position = 1;
	repeated CSBlock Blocks = 2;
	optional bytes BlocksInBytes = 3;
	repeated CSPlayer Players = 4;
}

//CS_REGISTER_REQ
message CSRegisterReq
{
	required string Account = 1;
	required string Name = 2;
	required string Password = 3;
}

//CS_REGISTER_RES
message CSRegisterRes
{
	required int32 RetCode = 1;
}

//CS_LOGIN_REQ
message CSLoginReq
{
	required string Account = 1;
	required string Password = 2;
}

//CS_LOGIN_RES
message CSLoginRes
{
	required int32 RetCode = 1;
	optional CSPlayer PlayerData = 2;
	repeated CSBlockAttrs BlockAttrs = 4;
}

//CS_SEND_MESSAGE_REQ
message CSSendMessageReq
{
	required string Content = 1;
}

//CS_SEND_MESSAGE_RES
message CSSendMessageRes
{
	required int32 RetCode = 1;
}

//CS_MESSAGE_NOTIFY
message CSMessageNotify
{
	required string Name = 1;
	required string Content = 2;
}

//CS_CHUNKS_ENTER_LEVAE_VIEW_REQ
message CSChunksEnterLeaveViewReq
{
	repeated CSVector2Int EnterViewChunks = 1;
	repeated CSVector2Int LeaveViewChunks = 2;
}

//CS_CHUNKS_ENTER_LEVAE_VIEW_RES
message CSChunksEnterLeaveViewRes
{
	required int32 RetCode = 1;
	repeated CSChunk EnterViewChunks = 2;
	repeated CSVector2Int LeaveViewChunks = 3;
}

//CS_ADD_BLOCK_REQ
message CSAddBlockReq
{
	required CSBlock block = 1;
}

//CS_ADD_BLOCK_RES
message CSAddBlockRes
{
	required int32 RetCode = 1;
	required CSBlock block = 2;
}

//CS_ADD_BLOCK_NOTIFY
message CSAddBlockNotify
{
	required CSBlock block = 1;
}

//CS_DELETE_BLOCK_REQ
message CSDeleteBlockReq
{
	required CSVector3Int position = 1;
}

//CS_DELETE_BLOCK_RES
message CSDeleteBlockRes
{
	required int32 RetCode = 1;
	repeated CSVector3Int position = 2;
}

//CS_DELETE_BLOCK_NOTIFY
message CSDeleteBlockNotify
{
	repeated CSVector3Int position = 1;
}

//CS_HERO_MOVE_REQ
message CSHeroMoveReq
{
	required CSVector3 Position = 1;
	required CSVector3 Rotation = 2;
}

//CS_HERO_MOVE_RES
message CSHeroMoveRes
{
	required int32 RetCode = 1;
}

//CS_PLAYER_MOVE_NOTIFY
message CSPlayerMoveNotify
{
	required uint32 PlayerID = 1;
	required CSVector3 Position = 2;
	required CSVector3 Rotation = 3;
}

//CS_PLAYER_ENTER_VIEW_NOTIFY
message CSPlayerEnterViewNotify
{
	required CSPlayer PlayerData = 1;
}

//CS_PLAYER_LEAVE_VIEW_NOTIFY
message CSPlayerLeaveViewNotify
{
	required uint32 PlayerID = 1;
}

//CS_HERO_CHANGE_SELECT_INDEX_REQ
message CSHeroChangeSelectIndexReq
{
	required uint32 Index = 1;
}

//CS_HERO_CHANGE_SELECT_ITEM_REQ
message CSHeroChangeSelectItemReq
{
	required uint32 Index = 1;
	required CSBlockType Item = 2;
	required uint32 Count = 3;
}

message BlobChunkData
{
	repeated CSBlock BlockList = 1;
}